name: Build on Prompt

on:
    workflow_dispatch:
      inputs:
        build_type:
          description: 'Select Build Type'
          required: true
          default: 'exe'
          type: choice
          options:
          - exe
        release_tag:
          description: 'Release Tag (e.g., v1.0.0)'
          required: true


jobs:
  build-and-release-windows:
    runs-on: windows-latest
    if: inputs.build_type == 'exe'
    steps:
      - uses: subosito/flutter-action@v1.5.0
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '${{ secrets.FLUTTER_VERSION }}'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable Windows Build
        run: flutter config --enable-windows-desktop
      - name: Build Artifacts
        run: flutter build windows --release
      - name: Display Build Information
        run: dir build/windows/x64/runner/Release
      - name: Archive Build Artifacts
        run: |
          $tag_name="${{ github.event.inputs.release_tag || github.ref_name }}"
          Compress-Archive -Path build/windows/x64/runner/Release -DestinationPath build/windows/x64/runner/Release/${tag_name}-windows.zip
      - name: Display Build Information with Zip
        run: dir build/windows/x64/runner/Release
      - name: Set Release Tag
        id: set_tag
        run: |
          echo "RELEASE_TAG=${{ github.event.inputs.release_tag || github.ref_name }}" >> $GITHUB_ENV
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/x64/runner/Release/${{ env.RELEASE_TAG }}-windows.zip
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          body: |
            Release created for tag: ${{ env.RELEASE_TAG }}
            Build Type: ${{ github.event.inputs.build_type }}
